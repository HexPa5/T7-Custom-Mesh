<Window x:Class="Obj_Creator.MainWindow"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        Title="Tekken 7 Custom Mesh" MinHeight="600" MaxHeight="600" Height="600" MinWidth="1000"
        MaxWidth="1000" Width="1000" Icon="Tekken_7_Custom_Mesh icon.ico" Background="{x:Null}">
  <FrameworkElement.Resources>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
      <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFECF4FC" Offset="0.0"/>
      <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
      <GradientStop Color="#FFDCECFC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFDAECFC" Offset="0.0"/>
      <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
      <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="ButtonBase.ClickMode" Value="Press"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
              <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right"
                      Margin="0" SnapsToDevicePixels="true"
                      Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                <Path x:Name="arrow"
                      Data="F1 M 0,0 L 2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0 Z"
                      Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0"
                      VerticalAlignment="Center"/>
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}" Property="Shape.Fill"/>
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Shape.Fill"/>
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" Property="Shape.Fill"/>
              </Trigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="false"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                  <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                             Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"
                        Property="Border.BorderBrush"/>
              </MultiDataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
          <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                         FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                    BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}" Content="Support us"
                          ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                          Margin="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
          <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
          <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
        </Trigger>
        <Trigger Property="ItemsControl.HasItems" Value="false">
          <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ItemsControl.IsGrouping" Value="true"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        </MultiTrigger>
        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
          <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
          <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="UIElement.AllowDrop" Value="true"/>
      <Setter Property="FrameworkElement.MinWidth" Value="0"/>
      <Setter Property="FrameworkElement.MinHeight" Value="0"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent"
                                         FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                    BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}"
                Margin="{TemplateBinding Control.BorderThickness}">
          <TextBox x:Name="PART_EditableTextBox"
                   HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                   Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                   VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                   IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Border>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="UIElement.IsEnabled" Value="false">
          <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
        </Trigger>
        <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
          <Setter Property="Control.Foreground" Value="Black"/>
        </Trigger>
        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
          <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
          <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
        </Trigger>
        <Trigger Property="ItemsControl.HasItems" Value="false">
          <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ItemsControl.IsGrouping" Value="true"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        </MultiTrigger>
        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
          <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
          <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBox_Style" TargetType="{x:Type ComboBox}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.Background" Value="{StaticResource ComboBox.Static.Background}"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
      <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="Control.Padding" Value="6,3,5,3"/>
      <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
      <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Setter Property="Control.Template" Value="{StaticResource ComboBoxTemplate}"/>
      <Style.Triggers>
        <Trigger Property="ComboBox.IsEditable" Value="true">
          <Setter Property="Control.IsTabStop" Value="false"/>
          <Setter Property="Control.Padding" Value="2"/>
          <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
      <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Border}" Property="Border.BorderBrush"/>
                <Setter TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
      <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="border" Value="{StaticResource Button.MouseOver.Border}" Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="border" Value="{StaticResource Button.Pressed.Border}" Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Border}" Property="Border.BorderBrush"/>
                <Setter TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid Margin="0,0,-8,0">
    <Panel.Background>
      <ImageBrush ImageSource="Pictures/Backroung_T7_Eliza.png"/>
    </Panel.Background>
    <Grid x:Name="Grid_Settings" HorizontalAlignment="Left" Margin="331,0,0,307" Width="363" Height="173"
          VerticalAlignment="Bottom" Background="White" IsHitTestVisible="true" Visibility="Hidden">
      <Label x:Name="Label_Offset_Start" Content="Offset Start:" HorizontalAlignment="Left" Margin="0,0,0,87"
             Width="79" HorizontalContentAlignment="Center" Height="29" VerticalAlignment="Bottom" FontSize="11"
             Background="{x:Null}"/>
      <TextBox x:Name="txt_Offset_Start" HorizontalAlignment="Left" Margin="79,0,0,87" TextWrapping="Wrap"
               Width="99" Height="29" VerticalAlignment="Bottom" HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <Label Content="4) Settings" HorizontalAlignment="Left" Margin="36,0,0,142" Width="317" Height="25"
             VerticalAlignment="Bottom" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
             FontSize="11" FontWeight="Bold" Background="{x:Null}"/>
      <Label x:Name="Label_Padding" Content="Padding:" HorizontalAlignment="Left" Width="79" Height="29"
             VerticalAlignment="Bottom" Margin="0,0,0,29" VerticalContentAlignment="Center"
             HorizontalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <Label x:Name="Label_Count" Content="Count:" HorizontalAlignment="Left" Margin="0,0,0,58" Width="79"
             Height="29" VerticalAlignment="Bottom" VerticalContentAlignment="Center"
             HorizontalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <TextBox x:Name="txt_count" HorizontalAlignment="Left" Margin="79,0,0,58" TextWrapping="Wrap" Width="99"
               Height="29" VerticalAlignment="Bottom" HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <TextBox x:Name="txt_padding" HorizontalAlignment="Left" Margin="79,0,0,29" TextWrapping="Wrap" Width="99"
               Height="29" VerticalAlignment="Bottom" HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <Label x:Name="Label_Offset_Start_Copy" Content="Offset Start:" HorizontalAlignment="Left"
             Margin="183,0,0,87" Width="79" HorizontalContentAlignment="Center" Height="29"
             VerticalAlignment="Bottom" FontSize="11" Background="{x:Null}"/>
      <TextBox x:Name="txt_Offset_Start_faces" HorizontalAlignment="Left" Margin="262,0,0,87" TextWrapping="Wrap"
               Width="98" Height="29" VerticalAlignment="Bottom" HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <Label x:Name="Label_Padding_Copy" Content="Padding:" HorizontalAlignment="Left" Width="79" Height="29"
             VerticalAlignment="Bottom" Margin="183,0,0,29" VerticalContentAlignment="Center"
             HorizontalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <Label x:Name="Label_Count_Copy" Content="Count:" HorizontalAlignment="Left" Margin="183,0,0,58"
             Width="79" Height="29" VerticalAlignment="Bottom" VerticalContentAlignment="Center"
             HorizontalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <TextBox x:Name="txt_count_faces" HorizontalAlignment="Left" Margin="262,0,0,58" TextWrapping="Wrap"
               Width="98" Height="29" VerticalAlignment="Bottom" HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <TextBox x:Name="txt_padding_faces" HorizontalAlignment="Left" Margin="262,0,0,29" TextWrapping="Wrap"
               Width="98" Height="29" VerticalAlignment="Bottom" HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <Label x:Name="Label_Count_Copy1" Content="Vertices" HorizontalAlignment="Left" Margin="1,0,0,113"
             Width="177" Height="29" VerticalAlignment="Bottom" VerticalContentAlignment="Center"
             HorizontalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <Label x:Name="Label_Count_Copy2" Content="Faces" HorizontalAlignment="Left" Margin="183,0,0,113"
             Width="177" Height="29" VerticalAlignment="Bottom" VerticalContentAlignment="Center"
             HorizontalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <Label x:Name="Label_Offset_Start_Copy1" Content="Offset Finish:" HorizontalAlignment="Left" Width="79"
             HorizontalContentAlignment="Center" Height="29" VerticalAlignment="Bottom" FontSize="11"
             Background="{x:Null}"/>
      <TextBox x:Name="txt_Offset_Finish_Vertices" HorizontalAlignment="Left" Margin="79,0,0,0"
               TextWrapping="Wrap" Width="99" Height="29" VerticalAlignment="Bottom"
               HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="11"
               Background="{x:Null}"/>
      <Label x:Name="Label_Offset_Start_Copy2" Content="Offset Finish:" HorizontalAlignment="Left"
             Margin="183,0,0,0" Width="79" HorizontalContentAlignment="Center" Height="29"
             VerticalAlignment="Bottom" FontSize="11" Background="{x:Null}"/>
      <TextBox x:Name="txt_Offset_Finish_faces" HorizontalAlignment="Left" Margin="262,0,0,0" TextWrapping="Wrap"
               Width="98" Height="29" VerticalAlignment="Bottom" HorizontalContentAlignment="Center"
               VerticalContentAlignment="Center" FontSize="11" Background="{x:Null}"/>
      <CheckBox x:Name="Check_Box_Settings" Content="" HorizontalAlignment="Left" Height="19" Margin="9,12,0,0"
                VerticalAlignment="Top" Width="27"/>
    </Grid>
    <Grid Height="31" Margin="0,10,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="255">
      <TextBlock x:Name="Text_Block_Open_Uasset_Title_Copy" TextWrapping="Wrap" TextAlignment="Center" FontSize="9"
                 FontWeight="Bold" Foreground="White" HorizontalAlignment="Right" Width="80" Height="31"
                 VerticalAlignment="Top" Margin="0,0,86,0">
        <Run Text="Dagon_Paul"/>
        <LineBreak/>
        <Run/>
        <Run Text="CrossS95 "/>
      </TextBlock>
      <TextBlock x:Name="Text_Block_Open_Uasset_Title_Copy1" TextWrapping="Wrap" TextAlignment="Center" FontSize="9"
                 FontWeight="Bold" Foreground="White" HorizontalAlignment="Right" Width="80" Height="31"
                 VerticalAlignment="Top" Margin="0,0,1,0">
        <Run Text="Special Thanks "/>
        <LineBreak/>
        <Run Text="A5tronomy"/>
      </TextBlock>
      <ComboBox x:Name="Combo_Box_Support_Us" HorizontalAlignment="Left" Height="24" Margin="4,1,0,0"
                VerticalAlignment="Top" Width="81" Style="{DynamicResource ComboBox_Style}" FontSize="10">
        <Button Click="Button_Support_Dragon_Paul_Click" x:Name="Button_Support_Dragon_Paul" Content="Dragon_Paul"
                FontSize="10" HorizontalAlignment="Right" Width="70" Height="24" VerticalAlignment="Top">
          <Control.Background>
            <SolidColorBrush Color="White" Opacity="0.5"/>
          </Control.Background>
        </Button>
        <Button Click="Button_Support_CrossS95_Click" x:Name="Button_Support_CrossS95" Content="CrossS95"
                FontSize="10" HorizontalAlignment="Right" Width="70" Height="24" VerticalAlignment="Top">
          <Control.Background>
            <SolidColorBrush Color="White" Opacity="0.5"/>
          </Control.Background>
        </Button>
      </ComboBox>
    </Grid>
    <Button Click="Button_Click_Open_Uasset" MouseEnter="button_open_uasset_MouseEnter"
            x:Name="button_open_uasset" Content="" Margin="149,0,0,179" FontSize="20" FontWeight="Bold"
            Padding="1" HorizontalAlignment="Left" Width="65" Height="65" VerticalAlignment="Bottom"
            Style="{DynamicResource ButtonStyle}" BorderBrush="{x:Null}">
      <Control.Background>
        <ImageBrush ImageSource="Pictures/ImportUassetMetal100x100.png"/>
      </Control.Background>
    </Button>
    <TextBlock x:Name="Text_Block_Open_Uasset_Title" TextAlignment="Center" Height="29" VerticalAlignment="Bottom"
               Margin="218,0,0,215" Padding="0,7,0,0" TextWrapping="Wrap" HorizontalAlignment="Left" Width="260"
               ScrollViewer.CanContentScroll="true" FontSize="11" FontWeight="Bold">
      <TextBlock.Background>
        <ImageBrush ImageSource="Pictures/SelectionUpLeft.png"/>
      </TextBlock.Background>
    </TextBlock>
    <Button Click="Button_Open_Custom_Obj_Click" x:Name="Button_Open_Custom_Obj" Content="" Width="65"
            Height="65" VerticalAlignment="Bottom" FontSize="11" Margin="149,0,0,65" HorizontalAlignment="Left"
            Style="{DynamicResource ButtonStyle}" BorderBrush="{x:Null}">
      <Control.Background>
        <ImageBrush ImageSource="Pictures/ImportMetal100x100.png"/>
      </Control.Background>
    </Button>
    <TextBlock x:Name="Text_Block_Open_Custom_Obj" Height="30" Margin="218,0,0,100" Width="251"
               HorizontalAlignment="Left" VerticalAlignment="Bottom" TextWrapping="Wrap" TextAlignment="Center"
               FontSize="11" Padding="0,7.5,0,0" FontWeight="Bold">
      <TextBlock.Background>
        <ImageBrush ImageSource="Pictures/SelectionDownLeft.png"/>
      </TextBlock.Background>
    </TextBlock>
    <TextBlock x:Name="Text_Block_Save_Finished_Uasset" Margin="602,0,0,100" Width="249"
               HorizontalAlignment="Left" TextWrapping="Wrap" TextAlignment="Center" FontSize="11"
               Padding="0,7.5,0,0" FontWeight="Bold" Height="28" VerticalAlignment="Bottom">
      <TextBlock.Background>
        <ImageBrush ImageSource="Pictures/SelectionDownRight.png"/>
      </TextBlock.Background>
    </TextBlock>
    <Button Click="Button_Save_Uasset_Click" x:Name="Button_Save_Uasset" Content="" Width="64" Height="65"
            VerticalAlignment="Bottom" FontSize="11" Margin="532,0,0,63" HorizontalAlignment="Left"
            Style="{DynamicResource ButtonStyle}" BorderBrush="{x:Null}">
      <Control.Background>
        <ImageBrush ImageSource="Pictures/SaveUassetMetal100x100.png"/>
      </Control.Background>
    </Button>
    <TextBlock x:Name="Text_Block_Export_Obj_Title" Margin="601,0,0,215" Width="250" HorizontalAlignment="Left"
               TextWrapping="Wrap" TextAlignment="Center" FontSize="11" Height="30" VerticalAlignment="Bottom"
               Padding="0,7.5,0,0" FontWeight="Bold">
      <TextBlock.Background>
        <ImageBrush ImageSource="Pictures/SelectionUpRight.png"/>
      </TextBlock.Background>
    </TextBlock>
    <Button Click="Button_Export_obj_Click" x:Name="Button_Export_obj_2" Content="" Margin="530,0,0,179"
            Width="66" FontWeight="Bold" FontSize="11" TextOptions.TextHintingMode="Animated"
            HorizontalAlignment="Left" Height="66" VerticalAlignment="Bottom"
            Style="{DynamicResource ButtonStyle}" BorderBrush="{x:Null}">
      <Control.Background>
        <ImageBrush ImageSource="Pictures/ExportMetal100x100.png"/>
      </Control.Background>
    </Button>
    <Button Click="Button_Click_Open_Uasset" Content="" HorizontalAlignment="Left" Margin="218,0,0,179"
            Width="260" FontSize="22" FontWeight="Bold" Height="30" VerticalAlignment="Bottom"
            ToolTip="Open a uasset file that contains the mesh of a character or an accessory"
            Style="{DynamicResource ButtonStyle2}" BorderBrush="{x:Null}">
      <Control.Background>
        <ImageBrush ImageSource="Pictures/OPEN_UASSET_40x280.png" Stretch="UniformToFill"/>
      </Control.Background>
    </Button>
    <Button Click="Button_Export_obj_Click" x:Name="Button_Export_obj_1" Content="" HorizontalAlignment="Left"
            Margin="601,0,0,179" Width="250" FontSize="22" FontWeight="Bold" Height="30"
            VerticalAlignment="Bottom"
            ToolTip="Export the mesh from uasset file to an obj file in order to edit it with a 3D software"
            Style="{DynamicResource ButtonStyle2}" BorderBrush="{x:Null}">
      <Control.Background>
        <ImageBrush ImageSource="Pictures/Export_obj_40x280.png" Stretch="UniformToFill"/>
      </Control.Background>
    </Button>
    <Button Click="Button_Save_Uasset_Click" Content="" HorizontalAlignment="Left" Margin="601,0,0,66"
            Width="250" FontSize="22" FontWeight="Bold" Height="32" VerticalAlignment="Bottom"
            ToolTip="Save your edited custom obj into the uasset file" Style="{DynamicResource ButtonStyle2}"
            BorderBrush="{x:Null}">
      <Control.Background>
        <ImageBrush ImageSource="Pictures/Save_uasset_40x280.png" Stretch="UniformToFill"/>
      </Control.Background>
    </Button>
    <Button Click="Button_Open_Custom_Obj_Click" Content="" HorizontalAlignment="Left" Margin="218,0,0,66"
            Width="251" FontSize="22" FontWeight="Bold" Height="32" VerticalAlignment="Bottom"
            ToolTip="Import the custom obj file you have edited with the 3D software"
            Style="{DynamicResource ButtonStyle2}" BorderBrush="{x:Null}">
      <Control.Background>
        <ImageBrush ImageSource="Pictures/Import_obj_40x280.png" Stretch="UniformToFill"/>
      </Control.Background>
    </Button>
    <TextBlock x:Name="Text_Block_Open_Uasset_Title_Copy2" TextWrapping="Wrap" TextAlignment="Center" FontSize="9"
               FontWeight="Bold" Foreground="White" HorizontalAlignment="Right" Width="104" Margin="0,0,17,10"
               Text="Created by Dagon_Paul" Height="19" VerticalAlignment="Bottom"/>
  </Grid>
</Window>